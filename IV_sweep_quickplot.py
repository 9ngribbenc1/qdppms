# This script quickly plots data files generated by pymeasure and other scripts.


import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit
from scipy.stats import linregress
import os
import glob

import utensils.re_values as ur
import utensils.data_reduce as ud


def veven_v_H(H, a, k, d):

    return a / (H-k) - d

def cubic_resistance(I, a, b, c, d):

    return a*I**3 + b*I**2 + c*I + d

def quintic_resistance(I, a, b, c, d, e, f):

    return a*I**5 + b*I**4 + c*I**3 + d*I**2 + e*I + f

def quadratic_sot(I, a):

    return a*I**2


def make_big_plot(x, ys):


    fig, ((ax1, ax2, ax3),
          (ax4, ax5, ax6),
          (ax7, ax8, ax9)) = plt.subplots(3,3,  sharex = True, sharey = True)
    fig.suptitle('Even Current contribution')
    ax1.plot(x, ys[0].volts_quad)
    ax1.plot(x, ys[0].volts_fit)
    ax1.set_title('3.0 kOe')
    ax1.set_ylabel('Voltage (V)')
    ax2.plot(x, ys[1].volts_quad)
    ax2.plot(x, ys[1].volts_fit)
    ax2.set_title('3.5 kOe')
    ax3.plot(x, ys[2].volts_quad)
    ax3.plot(x, ys[2].volts_fit)
    ax3.set_title('4.0 kOe')
    ax4.plot(x, ys[3].volts_quad)
    ax4.plot(x, ys[3].volts_fit)
    ax4.set_title('4.5 kOe')
    ax4.set_ylabel('Voltage (V)')
    ax5.plot(x, ys[4].volts_quad)
    ax5.plot(x, ys[4].volts_fit)
    ax5.set_title('5.0 kOe')
    ax6.plot(x, ys[5].volts_quad)
    ax6.plot(x, ys[5].volts_fit)
    ax6.set_title('5.5 kOe')
    ax7.plot(x, ys[6].volts_quad)
    ax7.plot(x, ys[6].volts_fit)
    ax7.set_title('6.0 kOe')
    ax7.set_xlabel('Current (A)')
    ax7.set_ylabel('Voltage (V)')
    ax8.plot(x, ys[7].volts_quad)
    ax8.plot(x, ys[7].volts_fit)
    ax8.set_title('7.0 kOe')
    ax8.set_xlabel('Current (A)')
    ax9.plot(x, ys[8].volts_quad)
    ax9.plot(x, ys[8].volts_fit)
    ax9.set_title('8.0 kOe')
    ax9.set_xlabel('Current (A)')
 
    plt.show()


def bso_v_field(B, a, K, s):
    
    return a/(B-K) + s

def main():

    directory = (r"R:\Lab Member Files\Tony Edgeton\Raw Data\Transport"
                 r"\PPMS\B028\220820\300K_IVs_2")
    os.chdir(directory)

    filename = 'Delta_asym_2.5mA_300K_8kOe_90deg_B028_0.csv'

    """
    # For Delta_asym files
    measurement = AsymDeltaMeas()
    Emeasurement.read_overview_file(filename)
    print(measurement.data.head())
    measurement.shh_fit_highH(veven_v_H, 80)
    """

    # For individual IV sweep files
    pos_ids = ['IV*_3000*.txt', 'IV*_3501*.txt', 'IV*_4000*.txt',
               'IV*_4500*.txt', 'IV*_5000*.txt', 'IV*_5500*.txt',
               'IV*_6000*.txt', 'IV*_7000*.txt', 'IV*_8001*.txt']
    neg_ids = ['IV*_-3000*.txt', 'IV*_-3500*.txt', 'IV*_-4000*.txt',
               'IV*_-4500*.txt', 'IV*_-5000*.txt', 'IV*_-5500*.txt',
               'IV*_-6001*.txt', 'IV*_-7001*.txt', 'IV*_-8000*.txt']
    measurement = []
    flds = []
    curvs = []
    for i in range(9):
        measurement.append(ud.IVMeasST())
        measurement[-1].readfiles(pos_ids[i], neg_ids[i])
        measurement[-1].find_quad(show=False)
        flds.append(measurement[-1].field)
        #print(flds)
        curvs.append(measurement[-1].params_quad[0])
        #print(curvs)

    params, pcov = curve_fit(bso_v_field, flds, curvs, [-1800., 2400., 3.e-6])

    make_big_plot(measurement[0].rep_current, measurement)

    #flistn = glob.glob('IV*-2600*.txt')
    #flistp = glob.glob('IV*2600*.txt')
    plt.plot(flds, curvs)
    plt.plot(flds, bso_v_field(flds, *params))
    plt.show()





if __name__ == "__main__":
    main()
